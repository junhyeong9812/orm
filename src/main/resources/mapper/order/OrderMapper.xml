<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.benchmark.orm.domain.order.mapper.OrderMapper">
    <!-- 주문 등록 -->
    <insert id="insert" parameterType="com.benchmark.orm.domain.order.entity.Order">
        INSERT INTO orders (order_date, user_id, product_id)
        VALUES (#{orderDate}, #{user.id}, #{product.id})
    </insert>

    <!-- 주문 정보 수정 -->
    <update id="update" parameterType="com.benchmark.orm.domain.order.entity.Order">
        UPDATE orders
        SET order_date = #{orderDate},
        user_id = #{user.id},
        product_id = #{product.id}
        WHERE id = #{id}
    </update>

    <!-- ID로 주문 삭제 -->
    <delete id="deleteById" parameterType="long">
        DELETE FROM orders WHERE id = #{id}
    </delete>

    <!-- ID로 주문 조회 -->
    <select id="findById" parameterType="long" resultType="com.benchmark.orm.domain.order.entity.Order">
        SELECT * FROM orders WHERE id = #{id}
    </select>

    <!-- 모든 주문 조회 -->
    <select id="findAll" resultType="com.benchmark.orm.domain.order.entity.Order">
        SELECT * FROM orders
    </select>

    <!-- 페이징된 주문 조회 -->
    <select id="findAllWithPaging" resultType="com.benchmark.orm.domain.order.entity.Order">
        SELECT * FROM orders LIMIT #{limit} OFFSET #{offset}
    </select>

    <!-- 정렬된 주문 조회 -->
    <select id="findAllWithSorting" resultType="com.benchmark.orm.domain.order.entity.Order">
        SELECT * FROM orders ORDER BY ${sortColumn} ${sortDirection}
    </select>

    <!-- 페이징 및 정렬된 주문 조회 -->
    <select id="findAllWithPagingAndSorting" resultType="com.benchmark.orm.domain.order.entity.Order">
        SELECT * FROM orders ORDER BY ${sortColumn} ${sortDirection}
        LIMIT #{limit} OFFSET #{offset}
    </select>

    <!-- 검색 조건에 따른 WHERE 절 -->
    <sql id="searchCondition">
        <where>
            <if test="searchDto != null">
                <if test="searchDto.userId != null">
                    user_id = #{searchDto.userId}
                </if>
                <if test="searchDto.productId != null">
                    <choose>
                        <when test="searchDto.userId == null">
                            product_id = #{searchDto.productId}
                        </when>
                        <otherwise>
                            AND product_id = #{searchDto.productId}
                        </otherwise>
                    </choose>
                </if>
                <if test="searchDto.startDate != null and searchDto.endDate != null">
                    <choose>
                        <when test="searchDto.userId == null and searchDto.productId == null">
                            order_date BETWEEN #{searchDto.startDate} AND #{searchDto.endDate}
                        </when>
                        <otherwise>
                            AND order_date BETWEEN #{searchDto.startDate} AND #{searchDto.endDate}
                        </otherwise>
                    </choose>
                </if>
                <if test="searchDto.startDate != null and searchDto.endDate == null">
                    <choose>
                        <when test="searchDto.userId == null and searchDto.productId == null">
                            order_date &gt;= #{searchDto.startDate}
                        </when>
                        <otherwise>
                            AND order_date &gt;= #{searchDto.startDate}
                        </otherwise>
                    </choose>
                </if>
                <if test="searchDto.startDate == null and searchDto.endDate != null">
                    <choose>
                        <when test="searchDto.userId == null and searchDto.productId == null">
                            order_date &lt;= #{searchDto.endDate}
                        </when>
                        <otherwise>
                            AND order_date &lt;= #{searchDto.endDate}
                        </otherwise>
                    </choose>
                </if>
            </if>
        </where>
    </sql>

    <!-- 검색 조건을 이용한 주문 검색 -->
    <select id="searchOrders" resultType="com.benchmark.orm.domain.order.entity.Order">
        SELECT * FROM orders
        <include refid="searchCondition"/>
        <if test="sortColumn != null and sortDirection != null">
            ORDER BY ${sortColumn} ${sortDirection}
        </if>
        <if test="limit > 0">
            LIMIT #{limit} OFFSET #{offset}
        </if>
    </select>

    <!-- 검색 조건을 이용한 주문 총 개수 조회 -->
    <select id="countBySearchDto" resultType="int">
        SELECT COUNT(*) FROM orders
        <include refid="searchCondition"/>
    </select>
</mapper>