plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.5'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.benchmark'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// Spring Boot 기본
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	// MyBatis
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.3'

	// 데이터베이스 드라이버
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'com.mysql:mysql-connector-j'
	runtimeOnly 'org.postgresql:postgresql'

	// NoSQL 데이터베이스
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	implementation 'org.springframework.boot:spring-boot-starter-data-elasticsearch'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	// QueryDSL (Jakarta 호환 버전)
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jakarta'
	annotationProcessor 'jakarta.annotation:jakarta.annotation-api'
	annotationProcessor 'jakarta.persistence:jakarta.persistence-api'

	// MyBatis SQL Builder 대안 (MyBatis Dynamic SQL)
	implementation 'org.mybatis.dynamic-sql:mybatis-dynamic-sql:1.5.0'

	// Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'

	// Swagger/OpenAPI
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'

	// 테스트
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	testImplementation 'de.flapdoodle.embed:de.flapdoodle.embed.mongo.spring30x:4.12.0'
	testImplementation 'it.ozimov:embedded-redis:0.7.3'
}

tasks.named('test') {
	useJUnitPlatform()
}

// QueryDSL Q 클래스 생성 경로
sourceSets {
	main {
		java {
			srcDirs += file("$buildDir/generated/querydsl")
		}
	}
}

configurations {
	querydsl.extendsFrom compileClasspath
}

tasks.withType(JavaCompile).configureEach {
	options.annotationProcessorPath = configurations.annotationProcessor
	options.compilerArgs += "-parameters"
}